@import '~react-toastify/dist/ReactToastify.css';
@import "~bootstrap-icons/font/bootstrap-icons";
@import "~video.js/dist/video-js.css";
@import '~animate.css/animate.css';

.light {
    @import "~bootswatch/dist/flatly/bootstrap.min.css";

    /* FIXME: Not working as expected. This is meant to eliminate the need for passing the darkMode.
    header {
        .navbar {
            @extend .bg-primary;
        }
    }*/

    .media-container {
        &:hover {
            .card {
                border: 1px solid rgba(#000, 0.125);
                box-shadow: 0 .125rem .25rem rgba(#000, .075);
            }
        }
    }

    .editable-text {
        &:hover {
            -webkit-box-shadow: inset 0px -3px 0px rgba(#000, 0.1);
            -moz-box-shadow: inset 0px -3px 0px rgba(#000, 0.1);
            box-shadow: inset 0px -3px 0px rgba(#000, 0.1);

            .underline {
                background-color: rgba(#000, 0.1);
            }
        }

        &.editing {

            .underline {
                background-color: rgba(#3498db, 1.0);
            }
        }
    }
}

.dark {
    @import "~bootswatch/dist/darkly/bootstrap.min.css";

    /* FIXME: Not working as expected. This is meant to eliminate the need for passing the darkMode.
    header {
        .navbar {
            @extend .bg-dark;
        }
    }
    */

    .breadcrumb {
        .breadcrumb-item {
            a {
                &:hover {
                    color: rgba(#fff, 0.7);
                }
            }
        }
    }

    .media-container {
        &:hover {
            .card {
                border: 1px solid rgba(#fff, 0.125);
                box-shadow: 0 .125rem .75rem rgba(#fff, 0.050);
            }
        }
    }

    .editable-text {

        &:hover {
            -webkit-box-shadow: inset 0px -3px 0px rgba(#fff, 0.1);
            -moz-box-shadow: inset 0px -3px 0px rgba(#fff, 0.1);
            box-shadow: inset 0px -3px 0px rgba(#fff, 0.1);

            .underline {
                background-color: rgba(#000, 0.1);
            }
        }

        &.editing {

            .underline {
                background-color: rgba(#3498db, 1.0);
            }
        }
    }
}

@mixin flag-styles {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-shadow: 0 0 1px #000;
    color: white;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    font-size: large;
    line-height: 1;
    margin-right: 5px;
    position: relative;
    cursor: pointer;
    display: none;

    &.favorite {
        &.set {
            color: yellow;

            &:hover {
                color: white;
            }
        }
        &:hover {
            color: yellow;
        }
    }
}

.navbar-nav {
    .toolbar {
        .flag,
        .icon {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            text-shadow: none;
            color: lightgray;
            font-style: normal;
            font-variant: normal;
            font-weight: normal;
            font-size: x-large;
            position: relative;
            line-height: 1;

            &:not(.set) {
                opacity: 0.3;
            }
        }
    }
}

.media-viewer {

    .flags {
        top: 5px;
        left: 5px;
        right: 5px;
        position: absolute;
        vertical-align: middle;
    }

    .flag {
        @include flag-styles;

        font-size: xx-large;
    }

    .modal-body:hover {
        .flag {
            display: unset;
        }
    }
}

// the padding between the grid items and when hovered
.grid-wrapper {
    .grid {
        overflow-x: hidden !important;
    }
    .grid-item {
        padding: 0.25rem;
        -webkit-transition: all .15s ease-out;
        -moz-transition: all .15s ease-out;
        transition: all .15s ease-out;
        --animate-duration: 0.5s;

        @media all and (hover: hover) {
            &:hover {
                transform: translateY(-5px);
            }
        }
    }
}

.media-container {
    height: 100%;

    // unset the bootstrap/theme anchor styles for the card element
    @at-root a#{&} {
        color: unset;
        text-decoration: unset;
        background-color: unset;

        &:hover {
            color: unset;
            text-decoration: unset;
        }
    }

    .card {
        border: 1px solid rgba(0, 0, 0, 0.125);
        margin-bottom: 15px;
        cursor: pointer;
        height: 100%;

        // non-touch devices supporting a real hover effect
        @media all and (hover: hover) {
            &:hover {
                .thumbnail-container {
                    .flag {
                        display: unset;
                    }
                }
            }
        }

        .thumbnail-container {
            width: 100%;
            height: 56.25%; // 9:16
            position: relative;
            overflow: hidden;

            .flags {
                top: 5px;
                left: 5px;
                right: 5px;
                position: absolute;
                vertical-align: middle;
            }

            .flag {
                @include flag-styles;

                // touch devices not supporting a real hover effect
                @media not all and (hover: hover) {
                    display: unset;
                }

                &.set {
                    display: unset;
                }
            }

            .thumbnail {
                width: 100%;
                height: 100%;

                .thumbnail-icon {
                    font-size: 7rem;
                }
            }

            .duration {
                &.badge {
                    position: absolute;
                    bottom: 7px;
                    right: 5px;
                }
            }

            .extension {
                &.badge {
                    text-transform: uppercase;
                    position: absolute;
                    bottom: 7px;
                    left: 5px;
                }
            }
        }

        .card-img {
            width: 100%;
            height: 100%;
            border-bottom-left-radius: 0%;
            border-bottom-right-radius: 0%;
        }

        .card-body {
            height: 5rem;
            padding: 0.5rem;

            .card-title {
                flex-grow: 1;
                flex-shrink: 2;
                overflow: hidden;
                max-height: 1.7em;
                text-overflow: ellipsis;
                white-space: normal;
                -webkit-transition: all .15s ease-out;
                -moz-transition: all .15s ease-out;
                transition: all .15s ease-out;
                margin-bottom: 0.5rem;

                &.editing {
                    flex-shrink: 0.5;
                    max-height: 2.8em;
                }
            }

            .card-text {
                opacity: 0.8;
                flex-grow: 1;
                flex-shrink: 1;
                overflow: hidden;
                max-height: 2.9em;
                text-overflow: ellipsis;
                white-space: normal;
                -webkit-transition: all .15s ease-out;
                -moz-transition: all .15s ease-out;
                transition: all .15s ease-out;
            }
        }

        .progress {
            left: 0px;
            bottom: 0px;
            width: 100%;
            height: 2px;
            position: absolute;
            border-radius:unset;
        }
    }

    &.folder {
        .card {
            .card-title, .card-text {
                text-align: center;
            }
        }
    }
}

.spinner-border {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    display: inline-block;
    vertical-align: text-bottom;
    border: 0.15em solid currentColor;
    border-right-color: transparent;
    animation: spinner-border .75s linear infinite;
}

.editable-text {

    width: 100%;
    height: 100%;
    cursor: text;

    textarea {
        width: 100%;
        height: 100%;
        padding: 0px;
        resize: none;
        border: none;
        outline: none;
        flex: 1 1 auto;
        color: inherit;
        overflow: hidden;
        text-align: inherit;
        background-color: inherit;
    }

    .label {
        height: 100%;
        flex: 1 1 auto;
        overflow: hidden;
        white-space: pre-wrap;
        -webkit-transition: all .15s ease-out;
        -moz-transition: all .15s ease-out;
        transition: all .15s ease-out;

        &.empty {
            opacity: 0;
        }
    }

    &.text-overflow-ellipsis {

        .label {
            white-space: nowrap;
            text-overflow: ellipsis;
        }
    }

    &:hover {

        & .label.empty {
            opacity: 0.2;
        }
    }

    .underline {
        top: -3px;
        height: 3px;
        transform: scaleX(0);
    }

    &.editing {

        .underline {
            transform: none;
            transition: opacity 218ms cubic-bezier(.4,0,.2,1), transform 218ms cubic-bezier(.4,0,.2,1), font-size 218ms cubic-bezier(.4,0,.2,1);
        }
    }
}

.sort-dropdown {

    .dropdown-menu {
        min-width: 13rem;

        .dropdown-item {
            &.active:not(:hover) {
                background-color: inherit;
            }
        }
    }
}

.media-viewer {

    .photo-viewer {

        height: 0;
        width: 100%;
        padding-top: 56.25%;

        & > img {
            display: none;
            object-fit: contain;
        }
    }

    .editable-text {
        min-height: 2em;
    }
}

.photo-preview {

    max-width: none;

    img {
        max-width: 480px;
        max-height: 480px;
    }
}

/*
@-webkit-keyframes spinner {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@keyframes spinner {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

.spinner::after {
    -webkit-animation: spinner 1s linear infinite;
    animation: spinner 1s linear infinite;
    border: 4px solid rgba(255, 255, 255, 0.1);
    border-left-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    content: '';
    display: inline-block;
    height: 40px;
    left: 50%;
    margin-left: -20px;
    margin-top: -20px;
    position: absolute;
    top: 50%;
    width: 40px;
    z-index: 1;
}
*/