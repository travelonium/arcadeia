include:
  - project: "templates/gitlab-ci"
    file: "docker.yml"
    ref: master

stages:
  - sync
  - build
  - test
  - deploy

before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

sync:master:
  image: $CI_REGISTRY/dockerhub/ubuntu:latest
  stage: sync
  tags:
    - linux
  script:
    - apt-get install -y git
    - git clone --mirror $CI_REPOSITORY_URL
    - cd $CI_PROJECT_NAME.git
    - git config user.name "$GITHUB_NAME"
    - git config user.email "$GITHUB_EMAIL"
    - git remote add github https://$GITHUB_USERNAME:$GITHUB_TOKEN@$GITHUB_REPO
    - git push github master
  only:
    - master

build:arcadeia:
  image: $CI_REGISTRY/dockerhub/dotnet-core-build:latest
  before_script:
    - dotnet restore
  tags:
    - linux
  stage: build
  script:
    - dotnet build

build:demo:
  image: node:20
  before_script:
    - cd Site
    - npm install
  tags:
    - linux
  stage: build
  script:
    - npm run site:build
    - cd ..
    - mkdir -p var/www
    - mv Site/.vitepress/dist/* var/www
  artifacts:
    paths:
      - var/www

deploy:demo:
  image: $CI_REGISTRY/dockerhub/ubuntu:latest
  needs:
    - job: build:demo
      artifacts: true
    - job: deploy:latest
      artifacts: false
  stage: deploy
  script:
    - |
      ssh -T $SSH_USER@$DEMO_SERVER "
        mkdir -p \"$DEMO_SERVER_DEPLOY_PATH\"; \
        cd \"$DEMO_SERVER_DEPLOY_PATH\"; \
        ./stop || true; \
        find . -maxdepth 1 ! -name 'appsettings.*' ! -name '.*' ! -name '.' ! -name '..' -exec rm -rf {} +; \
        echo \"$DEMO_SERVER_REGISTRY_PASSWORD\" | docker login \"$CI_REGISTRY\" -u \"$DEMO_SERVER_REGISTRY_USER\" --password-stdin;
      "
    - mv var Apache/var
    - scp -r Apache docker-compose*.* start stop restart logs exec $SSH_USER@$DEMO_SERVER:$DEMO_SERVER_DEPLOY_PATH/
    - |
      ssh -T $SSH_USER@$DEMO_SERVER "
        cd \"$DEMO_SERVER_DEPLOY_PATH\";
        ./start demo;
      "
  tags:
    - linux
  only:
    - master

test:
  image: $CI_REGISTRY/dockerhub/dotnet-core-build:latest
  before_script:
    - dotnet restore
  tags:
    - linux
  stage: test
  script:
    - dotnet test

.deploy-artifacts:
  artifacts:
    paths:
      - start
      - stop
      - restart
      - logs
      - exec
      - docker-compose.yml
      - docker-compose-test.yml
      - docker-compose-debug.yml
      - docker-compose-production.yml
      - Apache/usr/local/apache2/conf/httpd.conf
      - Apache/usr/local/apache2/conf/extra/vhosts/default.conf

deploy:test:
  extends:
    - .deploy-test
    - .deploy-artifacts

deploy:latest:
  extends:
    - .deploy-latest
    - .deploy-artifacts

deploy:tagged:
  extends:
    - .deploy-tagged
    - .deploy-artifacts
